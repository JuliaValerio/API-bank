{"ast":null,"code":"import _slicedToArray from \"/home/xulia/Desktop/API-bank/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/xulia/Desktop/API-bank/src/pages/AddUser/index.js\";\nimport React from \"react\";\nimport { useFormik } from \"formik\";\nimport api from '../../services/api';\nimport './style.css';\n\nconst MyForm = () => {\n  const _useFormik = useFormik({\n    initialValues: {\n      users: {\n        \"name\": \"\",\n        \"cpf\": \"\",\n        \"email\": \"\",\n        \"bankAccounts\": [\" \"]\n      }\n    },\n    onSubmit: (response, error) => {\n      api.post('/user', {\n        users: {\n          \"name\": \"\",\n          \"cpf\": \"\",\n          \"email\": \"\",\n          \"bankAccounts\": [\" \"]\n        }\n      }).then(function (response) {\n        console.log(response);\n      }).catch(function (error) {\n        console.log(error);\n      });\n    }\n  }),\n        getFieldProps = _useFormik.getFieldProps,\n        handleSubmit = _useFormik.handleSubmit,\n        errors = _useFormik.errors,\n        touched = _useFormik.touched;\n\n  const _getFieldProps = getFieldProps(\"name\", \"text\"),\n        _getFieldProps2 = _slicedToArray(_getFieldProps, 2),\n        name = _getFieldProps2[0],\n        metadataName = _getFieldProps2[1];\n\n  const _getFieldProps3 = getFieldProps(\"email\", \"text\"),\n        _getFieldProps4 = _slicedToArray(_getFieldProps3, 2),\n        email = _getFieldProps4[0],\n        metadataEmail = _getFieldProps4[1];\n\n  const _getFieldProps5 = getFieldProps(\"cpf\", \"text\"),\n        _getFieldProps6 = _slicedToArray(_getFieldProps5, 2),\n        cpf = _getFieldProps6[0],\n        metadatacpf = _getFieldProps6[1];\n\n  console.log({\n    errors,\n    touched\n  });\n  return React.createElement(\"div\", {\n    className: \"form-list\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    class: \"form-title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, \"Fa\\xE7a um novo cadastro :)\"), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, \"Nome: \"), React.createElement(\"input\", Object.assign({\n    placeholder: \"Seu nome\"\n  }, name, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  })), metadataName.touch && metadataName.error && React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, metadataName.error)), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, \"Email: \"), React.createElement(\"input\", Object.assign({\n    placeholder: \"Seu email\"\n  }, email, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  })), metadataEmail.touch && metadataEmail.error && React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, metadataEmail.error)), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, \"CPF: \"), React.createElement(\"input\", Object.assign({\n    placeholder: \"Seu CPF\"\n  }, cpf, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  })), metadatacpf.touch && metadatacpf.error && React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, metadatacpf.error)), React.createElement(\"button\", {\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, \"Enviar\")), React.createElement(\"pre\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, JSON.stringify({\n    name,\n    email,\n    cpf\n  }, 2, 2)));\n};\n\nexport default MyForm;","map":{"version":3,"sources":["/home/xulia/Desktop/API-bank/src/pages/AddUser/index.js"],"names":["React","useFormik","api","MyForm","initialValues","users","onSubmit","response","error","post","then","console","log","catch","getFieldProps","handleSubmit","errors","touched","name","metadataName","email","metadataEmail","cpf","metadatacpf","touch","JSON","stringify"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { useFormik } from \"formik\";\nimport api from '../../services/api';\nimport './style.css'\n\nconst MyForm = () => {\n  \n  const { getFieldProps, handleSubmit, errors, touched } = useFormik({\n    initialValues: {\n      \n     users: {\n        \"name\": \"\",\n        \"cpf\": \"\",\n        \"email\": \"\",\n        \"bankAccounts\": [\n          \" \"\n        ]\n      }\n      \n    },\n\n    onSubmit: (response, error) => {\n        api.post('/user', {\n          users: {\n            \"name\": \"\",\n            \"cpf\": \"\",\n            \"email\": \"\",\n            \"bankAccounts\": [\n              \" \"\n            ]\n          }\n          \n          })\n          .then(function (response) {\n            console.log(response);\n          })\n          .catch(function (error) {\n            console.log(error);\n          });\n    }\n  });\n\n  const [name, metadataName] = getFieldProps(\"name\", \"text\");\n  const [email, metadataEmail] = getFieldProps(\"email\", \"text\");\n  const [cpf, metadatacpf] = getFieldProps(\"cpf\", \"text\");\n  console.log({ errors, touched });\n  return (\n    <div className=\"form-list\">\n      <form onSubmit={handleSubmit}>\n      <span class=\"form-title\">\n        Fa√ßa um novo cadastro :)\n        </span>\n        <div>\n          <label>Nome: </label>\n          <input placeholder=\"Seu nome\" {...name} />\n          {metadataName.touch && metadataName.error && (\n            <span>{metadataName.error}</span>\n          )}\n        </div>\n        <div>\n          <label>Email: </label>\n          <input placeholder=\"Seu email\" {...email} />\n          {metadataEmail.touch && metadataEmail.error && (\n            <span>{metadataEmail.error}</span>\n          )}\n        </div>\n        <div>\n          <label>CPF: </label>\n          <input placeholder=\"Seu CPF\" {...cpf} />\n          {metadatacpf.touch && metadatacpf.error && (\n            <span>{metadatacpf.error}</span>\n          )}\n        </div>\n        <button type=\"submit\">Enviar</button>\n      </form>\n      <pre>{JSON.stringify({ name, email, cpf }, 2, 2)}</pre>\n    </div>\n  );\n};\n\nexport default MyForm;\n"]},"metadata":{},"sourceType":"module"}